/**
 * MappingMapToORM_O01.java
 *
 * This file was generated by MapForce 2020r2.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the MapForce Documentation for further details.
 * http://www.altova.com/mapforce
 */
package com.bracari.services.va.ehrmexammanagementservices.mapforce;
import com.altova.mapforce.*;
import com.altova.types.*;
import com.altova.xml.*;
import com.altova.text.tablelike.*;
import com.altova.text.*;
import com.altova.text.edi.*;
import java.util.*;

public class MappingMapToORM_O01 extends com.altova.TraceProvider {
	private boolean runDoesCloseAll = true;
	public void setCloseObjectsAfterRun(boolean c) {runDoesCloseAll = c;}
	public boolean getCloseObjectsAfterRun() {return runDoesCloseAll;}


	static class main implements IEnumerable {
		com.altova.mapforce.IMFNode var1_ExamManagement_3_1_Instance;

		public main(com.altova.mapforce.IMFNode var1_ExamManagement_3_1_Instance)	{
			this.var1_ExamManagement_3_1_Instance = var1_ExamManagement_3_1_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 2;
			Object current;
			main closure;
			com.altova.mapforce.IEnumerable var2_box;
			com.altova.mapforce.IEnumerable var3_ExamManagementEventN;

			public Enumerator(main closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_2() throws Exception {
				state = 0;				
				var2_box = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.box("1"));
				var3_ExamManagementEventN = new com.altova.functions.Core.SequenceCache(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamManagementEventNotification", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), closure.var1_ExamManagement_3_1_Instance));
				current = com.altova.functions.Core.createElement("GroupFHS", com.altova.functions.Core.box(com.altova.functions.Core.createElement("GroupBHS", com.altova.functions.Core.box(com.altova.functions.Core.createElement("Message_ORM_O01", (new seq1_seq_(var3_ExamManagementEventN, var2_box)))))));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq1_seq_ implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;
		com.altova.mapforce.IEnumerable var2_box;

		public seq1_seq_(com.altova.mapforce.IEnumerable var1_ExamManagementEventN, com.altova.mapforce.IEnumerable var2_box)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
			this.var2_box = var2_box;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq1_seq_ closure;

			public Enumerator(seq1_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("MSH", (new seq2_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement("ORM_O01.PATIENT", (new seq5_seq_(closure.var1_ExamManagementEventN, closure.var2_box)));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement("ORM_O01.ORDER", (new seq14_seq_(closure.var1_ExamManagementEventN, closure.var2_box)));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq2_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq2_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq2_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;

			public Enumerator(seq2_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("MSH-1", com.altova.functions.Core.box("|"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement("MSH-2", com.altova.functions.Core.box("^~\\&"));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 4;				
				current = com.altova.functions.Core.createElement("MSH-3", (new seq3_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_4() throws Exception {
				state = 5;				
				current = com.altova.functions.Core.createElement("MSH-9", (new seq4_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 6;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 7; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 0;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				current = com.altova.functions.Core.createElement("MSH-12", (new seq3_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.createElement("MSH-10", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("eventUuid", ""), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq3_seq_ implements IEnumerable {

		public seq3_seq_()	{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq3_seq_ closure;

			public Enumerator(seq3_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 0;				
				return false;
			}


			public void close() {
			}
		}
	}
	static class seq4_seq_ implements IEnumerable {

		public seq4_seq_()	{
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq4_seq_ closure;

			public Enumerator(seq4_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("MSG-1", com.altova.functions.Core.box("ORM"));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement("MSG-2", com.altova.functions.Core.box("\"O01\""));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq5_seq_ implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;
		com.altova.mapforce.IEnumerable var2_box;

		public seq5_seq_(com.altova.mapforce.IEnumerable var1_ExamManagementEventN, com.altova.mapforce.IEnumerable var2_box)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
			this.var2_box = var2_box;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq5_seq_ closure;

			public Enumerator(seq5_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("PID", (new seq6_join(closure.var1_ExamManagementEventN, closure.var2_box)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement("ORM_O01.PATIENT_VISIT", com.altova.functions.Core.box(com.altova.functions.Core.createElement("PV1", (new seq13_seq_(closure.var2_box)))));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq6_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;
		com.altova.mapforce.IEnumerable var2_box;

		public seq6_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN, com.altova.mapforce.IEnumerable var2_box)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
			this.var2_box = var2_box;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq6_join closure;
			IEnumerator var3_ExamManagementEventN;
			IEnumerator var4_ExamSchedulingReques;
			IEnumerator var5_PostDischargeClaimIn;
			IEnumerator var8_ExamManagementEventN;
			IEnumerator var6_VeteranServiceMember;
			IEnumerator var9_ExamSchedulingReques;
			IEnumerator var12_ExamManagementEventN;
			IEnumerator var7_EDIPI;
			IEnumerator var10_PostDischargeClaimIn;
			IEnumerator var13_ExamSchedulingReques;
			IEnumerator var11_VeteranServiceMember;
			IEnumerator var14_PostDischargeClaimIn;
			IEnumerator var15_VeteranServiceMember;
			IEnumerator var16_ExamManagementEventN;
			IEnumerator var17_ExamSchedulingReques;
			IEnumerator var20_ExamManagementEventN;
			IEnumerator var18_PostDischargeClaimIn;
			IEnumerator var21_ExamSchedulingReques;
			IEnumerator var19_VeteranServiceMember;
			IEnumerator var22_PostDischargeClaimIn;
			IEnumerator var23_VeteranServiceMember;
			IEnumerator var24_dateOfDeath;

			public Enumerator(seq6_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 14: if (moveNext_14()) return true; break;
						case 15: if (moveNext_15()) return true; break;
						case 16: if (moveNext_16()) return true; break;
						case 17: if (moveNext_17()) return true; break;
						case 18: if (moveNext_18()) return true; break;
						case 19: if (moveNext_19()) return true; break;
						case 20: if (moveNext_20()) return true; break;
						case 21: if (moveNext_21()) return true; break;
						case 22: if (moveNext_22()) return true; break;
						case 24: if (moveNext_24()) return true; break;
						case 25: if (moveNext_25()) return true; break;
						case 26: if (moveNext_26()) return true; break;
						case 27: if (moveNext_27()) return true; break;
						case 28: if (moveNext_28()) return true; break;
						case 29: if (moveNext_29()) return true; break;
						case 30: if (moveNext_30()) return true; break;
						case 31: if (moveNext_31()) return true; break;
						case 33: if (moveNext_33()) return true; break;
						case 34: if (moveNext_34()) return true; break;
						case 35: if (moveNext_35()) return true; break;
						case 36: if (moveNext_36()) return true; break;
						case 37: if (moveNext_37()) return true; break;
						case 38: if (moveNext_38()) return true; break;
						case 39: if (moveNext_39()) return true; break;
						case 40: if (moveNext_40()) return true; break;
						case 41: if (moveNext_41()) return true; break;
						case 42: if (moveNext_42()) return true; break;
						case 43: if (moveNext_43()) return true; break;
						case 45: if (moveNext_45()) return true; break;
						case 46: if (moveNext_46()) return true; break;
						case 47: if (moveNext_47()) return true; break;
						case 48: if (moveNext_48()) return true; break;
						case 49: if (moveNext_49()) return true; break;
						case 50: if (moveNext_50()) return true; break;
						case 51: if (moveNext_51()) return true; break;
						case 52: if (moveNext_52()) return true; break;
						case 53: if (moveNext_53()) return true; break;
						case 54: if (moveNext_54()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("PID-1", closure.var2_box);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var3_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var3_ExamManagementEventN.moveNext()) {state = 4; return false; }
				var4_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 14;				
				if( var3_ExamManagementEventN != null ) { var3_ExamManagementEventN.close(); var3_ExamManagementEventN = null; }
				current = com.altova.functions.Core.createElement("PID-5", (new seq7_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var4_ExamSchedulingReques.moveNext()) {state = 6; return false; }
				var5_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var4_ExamSchedulingReques != null ) { var4_ExamSchedulingReques.close(); var4_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var5_PostDischargeClaimIn.moveNext()) {state = 8; return false; }
				var6_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var5_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var5_PostDischargeClaimIn != null ) { var5_PostDischargeClaimIn.close(); var5_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var6_VeteranServiceMember.moveNext()) {state = 10; return false; }
				var7_EDIPI = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("EDIPI", ""), ((com.altova.mapforce.IMFNode)(var6_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var6_VeteranServiceMember != null ) { var6_VeteranServiceMember.close(); var6_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 11;				
				if (!var7_EDIPI.moveNext()) {state = 12; return false; }
				current = com.altova.functions.Core.createElement("PID-3", (new seq3_seq_()));
				pos++;
				return true;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var7_EDIPI != null ) { var7_EDIPI.close(); var7_EDIPI = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 15;				
				var8_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var8_ExamManagementEventN.moveNext()) {state = 16; return false; }
				var9_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var8_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 24;				
				if( var8_ExamManagementEventN != null ) { var8_ExamManagementEventN.close(); var8_ExamManagementEventN = null; }
				var12_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var9_ExamSchedulingReques.moveNext()) {state = 18; return false; }
				var10_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var9_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var9_ExamSchedulingReques != null ) { var9_ExamSchedulingReques.close(); var9_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var10_PostDischargeClaimIn.moveNext()) {state = 20; return false; }
				var11_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var10_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var10_PostDischargeClaimIn != null ) { var10_PostDischargeClaimIn.close(); var10_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 21;				
				if (!var11_VeteranServiceMember.moveNext()) {state = 22; return false; }
				current = com.altova.functions.Core.createElement("PID-7", com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.CoreTypes.parseDate(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("dateOfBirth", ""), ((com.altova.mapforce.IMFNode)(var11_VeteranServiceMember.current())))))))));
				pos++;
				return true;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var11_VeteranServiceMember != null ) { var11_VeteranServiceMember.close(); var11_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var12_ExamManagementEventN.moveNext()) {state = 25; return false; }
				var13_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var12_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 33;				
				if( var12_ExamManagementEventN != null ) { var12_ExamManagementEventN.close(); var12_ExamManagementEventN = null; }
				current = com.altova.functions.Core.createElement("PID-11", (new seq9_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var13_ExamSchedulingReques.moveNext()) {state = 27; return false; }
				var14_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var13_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var13_ExamSchedulingReques != null ) { var13_ExamSchedulingReques.close(); var13_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var14_PostDischargeClaimIn.moveNext()) {state = 29; return false; }
				var15_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var14_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var14_PostDischargeClaimIn != null ) { var14_PostDischargeClaimIn.close(); var14_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 30;				
				if (!var15_VeteranServiceMember.moveNext()) {state = 31; return false; }
				current = com.altova.functions.Core.createElement("PID-8", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("gender", ""), ((com.altova.mapforce.IMFNode)(var15_VeteranServiceMember.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var15_VeteranServiceMember != null ) { var15_VeteranServiceMember.close(); var15_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 34;				
				current = com.altova.functions.Core.createElement("PID-13", (new seq11_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_34() throws Exception {
				state = 35;				
				current = com.altova.functions.Core.createElement("PID-14", (new seq12_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_35() throws Exception {
				state = 36;				
				var16_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 38;				
				if (!var16_ExamManagementEventN.moveNext()) {state = 37; return false; }
				var17_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var16_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 45;				
				if( var16_ExamManagementEventN != null ) { var16_ExamManagementEventN.close(); var16_ExamManagementEventN = null; }
				var20_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_38() throws Exception {
				state = 40;				
				if (!var17_ExamSchedulingReques.moveNext()) {state = 39; return false; }
				var18_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var17_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_39() throws Exception {
				state = 36;				
				if( var17_ExamSchedulingReques != null ) { var17_ExamSchedulingReques.close(); var17_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var18_PostDischargeClaimIn.moveNext()) {state = 41; return false; }
				var19_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var18_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 38;				
				if( var18_PostDischargeClaimIn != null ) { var18_PostDischargeClaimIn.close(); var18_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 42;				
				if (!var19_VeteranServiceMember.moveNext()) {state = 43; return false; }
				current = com.altova.functions.Core.createElement("PID-19", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("fileNumber", ""), ((com.altova.mapforce.IMFNode)(var19_VeteranServiceMember.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var19_VeteranServiceMember != null ) { var19_VeteranServiceMember.close(); var19_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 47;				
				if (!var20_ExamManagementEventN.moveNext()) {state = 46; return false; }
				var21_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var20_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 0;				
				if( var20_ExamManagementEventN != null ) { var20_ExamManagementEventN.close(); var20_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 49;				
				if (!var21_ExamSchedulingReques.moveNext()) {state = 48; return false; }
				var22_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var21_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 45;				
				if( var21_ExamSchedulingReques != null ) { var21_ExamSchedulingReques.close(); var21_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 51;				
				if (!var22_PostDischargeClaimIn.moveNext()) {state = 50; return false; }
				var23_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var22_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 47;				
				if( var22_PostDischargeClaimIn != null ) { var22_PostDischargeClaimIn.close(); var22_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_51() throws Exception {
				state = 53;				
				if (!var23_VeteranServiceMember.moveNext()) {state = 52; return false; }
				var24_dateOfDeath = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("dateOfDeath", ""), ((com.altova.mapforce.IMFNode)(var23_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_52() throws Exception {
				state = 49;				
				if( var23_VeteranServiceMember != null ) { var23_VeteranServiceMember.close(); var23_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_53() throws Exception {
				state = 53;				
				if (!var24_dateOfDeath.moveNext()) {state = 54; return false; }
				current = com.altova.functions.Core.createElement("PID-29", com.altova.functions.Core.box(com.altova.CoreTypes.dateToString(com.altova.CoreTypes.parseDate(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_dateOfDeath.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_54() throws Exception {
				state = 51;				
				if( var24_dateOfDeath != null ) { var24_dateOfDeath.close(); var24_dateOfDeath = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_EDIPI != null ) { var7_EDIPI.close(); var7_EDIPI = null; }
					if( var6_VeteranServiceMember != null ) { var6_VeteranServiceMember.close(); var6_VeteranServiceMember = null; }
					if( var5_PostDischargeClaimIn != null ) { var5_PostDischargeClaimIn.close(); var5_PostDischargeClaimIn = null; }
					if( var4_ExamSchedulingReques != null ) { var4_ExamSchedulingReques.close(); var4_ExamSchedulingReques = null; }
					if( var3_ExamManagementEventN != null ) { var3_ExamManagementEventN.close(); var3_ExamManagementEventN = null; }
					if( var11_VeteranServiceMember != null ) { var11_VeteranServiceMember.close(); var11_VeteranServiceMember = null; }
					if( var10_PostDischargeClaimIn != null ) { var10_PostDischargeClaimIn.close(); var10_PostDischargeClaimIn = null; }
					if( var9_ExamSchedulingReques != null ) { var9_ExamSchedulingReques.close(); var9_ExamSchedulingReques = null; }
					if( var8_ExamManagementEventN != null ) { var8_ExamManagementEventN.close(); var8_ExamManagementEventN = null; }
					if( var15_VeteranServiceMember != null ) { var15_VeteranServiceMember.close(); var15_VeteranServiceMember = null; }
					if( var14_PostDischargeClaimIn != null ) { var14_PostDischargeClaimIn.close(); var14_PostDischargeClaimIn = null; }
					if( var13_ExamSchedulingReques != null ) { var13_ExamSchedulingReques.close(); var13_ExamSchedulingReques = null; }
					if( var12_ExamManagementEventN != null ) { var12_ExamManagementEventN.close(); var12_ExamManagementEventN = null; }
					if( var19_VeteranServiceMember != null ) { var19_VeteranServiceMember.close(); var19_VeteranServiceMember = null; }
					if( var18_PostDischargeClaimIn != null ) { var18_PostDischargeClaimIn.close(); var18_PostDischargeClaimIn = null; }
					if( var17_ExamSchedulingReques != null ) { var17_ExamSchedulingReques.close(); var17_ExamSchedulingReques = null; }
					if( var16_ExamManagementEventN != null ) { var16_ExamManagementEventN.close(); var16_ExamManagementEventN = null; }
					if( var24_dateOfDeath != null ) { var24_dateOfDeath.close(); var24_dateOfDeath = null; }
					if( var23_VeteranServiceMember != null ) { var23_VeteranServiceMember.close(); var23_VeteranServiceMember = null; }
					if( var22_PostDischargeClaimIn != null ) { var22_PostDischargeClaimIn.close(); var22_PostDischargeClaimIn = null; }
					if( var21_ExamSchedulingReques != null ) { var21_ExamSchedulingReques.close(); var21_ExamSchedulingReques = null; }
					if( var20_ExamManagementEventN != null ) { var20_ExamManagementEventN.close(); var20_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq7_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq7_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq7_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;
			IEnumerator var6_ExamManagementEventN;
			IEnumerator var4_PostDischargeClaimIn;
			IEnumerator var7_ExamSchedulingReques;
			IEnumerator var5_VeteranServiceMember;
			IEnumerator var8_PostDischargeClaimIn;
			IEnumerator var9_VeteranServiceMember;
			IEnumerator var10_middleName;

			public Enumerator(seq7_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
						case 14: if (moveNext_14()) return true; break;
						case 15: if (moveNext_15()) return true; break;
						case 16: if (moveNext_16()) return true; break;
						case 17: if (moveNext_17()) return true; break;
						case 18: if (moveNext_18()) return true; break;
						case 19: if (moveNext_19()) return true; break;
						case 20: if (moveNext_20()) return true; break;
						case 21: if (moveNext_21()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("XPN-1", (new seq8_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 4; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 12;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				var6_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 6; return false; }
				var4_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_PostDischargeClaimIn.moveNext()) {state = 8; return false; }
				var5_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 9;				
				if (!var5_VeteranServiceMember.moveNext()) {state = 10; return false; }
				current = com.altova.functions.Core.createElement("XPN-2", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("firstName", ""), ((com.altova.mapforce.IMFNode)(var5_VeteranServiceMember.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 14;				
				if (!var6_ExamManagementEventN.moveNext()) {state = 13; return false; }
				var7_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var6_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 0;				
				if( var6_ExamManagementEventN != null ) { var6_ExamManagementEventN.close(); var6_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 16;				
				if (!var7_ExamSchedulingReques.moveNext()) {state = 15; return false; }
				var8_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var7_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 12;				
				if( var7_ExamSchedulingReques != null ) { var7_ExamSchedulingReques.close(); var7_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var8_PostDischargeClaimIn.moveNext()) {state = 17; return false; }
				var9_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var8_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 14;				
				if( var8_PostDischargeClaimIn != null ) { var8_PostDischargeClaimIn.close(); var8_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_VeteranServiceMember.moveNext()) {state = 19; return false; }
				var10_middleName = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("middleName", ""), ((com.altova.mapforce.IMFNode)(var9_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var9_VeteranServiceMember != null ) { var9_VeteranServiceMember.close(); var9_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 20;				
				if (!var10_middleName.moveNext()) {state = 21; return false; }
				current = com.altova.functions.Core.createElement("XPN-3", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var10_middleName.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_middleName != null ) { var10_middleName.close(); var10_middleName = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
					if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
					if( var10_middleName != null ) { var10_middleName.close(); var10_middleName = null; }
					if( var9_VeteranServiceMember != null ) { var9_VeteranServiceMember.close(); var9_VeteranServiceMember = null; }
					if( var8_PostDischargeClaimIn != null ) { var8_PostDischargeClaimIn.close(); var8_PostDischargeClaimIn = null; }
					if( var7_ExamSchedulingReques != null ) { var7_ExamSchedulingReques.close(); var7_ExamSchedulingReques = null; }
					if( var6_ExamManagementEventN != null ) { var6_ExamManagementEventN.close(); var6_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq8_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq8_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq8_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;
			IEnumerator var4_PostDischargeClaimIn;
			IEnumerator var5_VeteranServiceMember;

			public Enumerator(seq8_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 3; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 5; return false; }
				var4_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_PostDischargeClaimIn.moveNext()) {state = 7; return false; }
				var5_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 8;				
				if (!var5_VeteranServiceMember.moveNext()) {state = 9; return false; }
				current = com.altova.functions.Core.createElement("FN-1", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("lastName", ""), ((com.altova.mapforce.IMFNode)(var5_VeteranServiceMember.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
				return false;
			}


			public void close() {
				try {
					if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
					if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq9_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq9_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq9_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;
			IEnumerator var8_ExamManagementEventN;
			IEnumerator var4_PostDischargeClaimIn;
			IEnumerator var9_ExamSchedulingReques;
			IEnumerator var5_VeteranServiceMember;
			IEnumerator var14_ExamManagementEventN;
			IEnumerator var10_PostDischargeClaimIn;
			IEnumerator var6_Address;
			IEnumerator var15_ExamSchedulingReques;
			IEnumerator var11_VeteranServiceMember;
			IEnumerator var19_ExamManagementEventN;
			IEnumerator var7_State;
			IEnumerator var16_PostDischargeClaimIn;
			IEnumerator var12_Address;
			IEnumerator var20_ExamSchedulingReques;
			IEnumerator var17_VeteranServiceMember;
			IEnumerator var13_ZipOrPostalCode;
			IEnumerator var21_PostDischargeClaimIn;
			IEnumerator var18_Address;
			IEnumerator var22_VeteranServiceMember;
			IEnumerator var23_Address;
			IEnumerator var24_description;

			public Enumerator(seq9_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
						case 14: if (moveNext_14()) return true; break;
						case 16: if (moveNext_16()) return true; break;
						case 17: if (moveNext_17()) return true; break;
						case 18: if (moveNext_18()) return true; break;
						case 19: if (moveNext_19()) return true; break;
						case 20: if (moveNext_20()) return true; break;
						case 21: if (moveNext_21()) return true; break;
						case 22: if (moveNext_22()) return true; break;
						case 23: if (moveNext_23()) return true; break;
						case 24: if (moveNext_24()) return true; break;
						case 25: if (moveNext_25()) return true; break;
						case 26: if (moveNext_26()) return true; break;
						case 27: if (moveNext_27()) return true; break;
						case 29: if (moveNext_29()) return true; break;
						case 30: if (moveNext_30()) return true; break;
						case 31: if (moveNext_31()) return true; break;
						case 32: if (moveNext_32()) return true; break;
						case 33: if (moveNext_33()) return true; break;
						case 34: if (moveNext_34()) return true; break;
						case 35: if (moveNext_35()) return true; break;
						case 36: if (moveNext_36()) return true; break;
						case 37: if (moveNext_37()) return true; break;
						case 38: if (moveNext_38()) return true; break;
						case 40: if (moveNext_40()) return true; break;
						case 41: if (moveNext_41()) return true; break;
						case 42: if (moveNext_42()) return true; break;
						case 43: if (moveNext_43()) return true; break;
						case 44: if (moveNext_44()) return true; break;
						case 45: if (moveNext_45()) return true; break;
						case 46: if (moveNext_46()) return true; break;
						case 47: if (moveNext_47()) return true; break;
						case 48: if (moveNext_48()) return true; break;
						case 49: if (moveNext_49()) return true; break;
						case 50: if (moveNext_50()) return true; break;
						case 51: if (moveNext_51()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("XAD-1", (new seq10_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 5;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 4; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 16;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				var8_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 7;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 6; return false; }
				var4_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 3;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 9;				
				if (!var4_PostDischargeClaimIn.moveNext()) {state = 8; return false; }
				var5_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 5;				
				if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 11;				
				if (!var5_VeteranServiceMember.moveNext()) {state = 10; return false; }
				var6_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var5_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 7;				
				if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 13;				
				if (!var6_Address.moveNext()) {state = 12; return false; }
				var7_State = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("State", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var6_Address.current())))).enumerator();
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 9;				
				if( var6_Address != null ) { var6_Address.close(); var6_Address = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 13;				
				if (!var7_State.moveNext()) {state = 14; return false; }
				current = com.altova.functions.Core.createElement("XAD-4", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_State.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_14() throws Exception {
				state = 11;				
				if( var7_State != null ) { var7_State.close(); var7_State = null; }
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 18;				
				if (!var8_ExamManagementEventN.moveNext()) {state = 17; return false; }
				var9_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var8_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 29;				
				if( var8_ExamManagementEventN != null ) { var8_ExamManagementEventN.close(); var8_ExamManagementEventN = null; }
				var14_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 20;				
				if (!var9_ExamSchedulingReques.moveNext()) {state = 19; return false; }
				var10_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var9_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 16;				
				if( var9_ExamSchedulingReques != null ) { var9_ExamSchedulingReques.close(); var9_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 22;				
				if (!var10_PostDischargeClaimIn.moveNext()) {state = 21; return false; }
				var11_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var10_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 18;				
				if( var10_PostDischargeClaimIn != null ) { var10_PostDischargeClaimIn.close(); var10_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 24;				
				if (!var11_VeteranServiceMember.moveNext()) {state = 23; return false; }
				var12_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var11_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 20;				
				if( var11_VeteranServiceMember != null ) { var11_VeteranServiceMember.close(); var11_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_24() throws Exception {
				state = 26;				
				if (!var12_Address.moveNext()) {state = 25; return false; }
				var13_ZipOrPostalCode = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ZipOrPostalCode", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var12_Address.current())))).enumerator();
				return false;
			}
			private boolean moveNext_25() throws Exception {
				state = 22;				
				if( var12_Address != null ) { var12_Address.close(); var12_Address = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 26;				
				if (!var13_ZipOrPostalCode.moveNext()) {state = 27; return false; }
				current = com.altova.functions.Core.createElement("XAD-5", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var13_ZipOrPostalCode.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_27() throws Exception {
				state = 24;				
				if( var13_ZipOrPostalCode != null ) { var13_ZipOrPostalCode.close(); var13_ZipOrPostalCode = null; }
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 31;				
				if (!var14_ExamManagementEventN.moveNext()) {state = 30; return false; }
				var15_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var14_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 40;				
				if( var14_ExamManagementEventN != null ) { var14_ExamManagementEventN.close(); var14_ExamManagementEventN = null; }
				var19_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 33;				
				if (!var15_ExamSchedulingReques.moveNext()) {state = 32; return false; }
				var16_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var15_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 29;				
				if( var15_ExamSchedulingReques != null ) { var15_ExamSchedulingReques.close(); var15_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 35;				
				if (!var16_PostDischargeClaimIn.moveNext()) {state = 34; return false; }
				var17_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var16_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 31;				
				if( var16_PostDischargeClaimIn != null ) { var16_PostDischargeClaimIn.close(); var16_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 37;				
				if (!var17_VeteranServiceMember.moveNext()) {state = 36; return false; }
				var18_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var17_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 33;				
				if( var17_VeteranServiceMember != null ) { var17_VeteranServiceMember.close(); var17_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_37() throws Exception {
				state = 37;				
				if (!var18_Address.moveNext()) {state = 38; return false; }
				current = com.altova.functions.Core.createElement("XAD-6", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Country", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var18_Address.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_38() throws Exception {
				state = 35;				
				if( var18_Address != null ) { var18_Address.close(); var18_Address = null; }
				return false;
			}
			private boolean moveNext_40() throws Exception {
				state = 42;				
				if (!var19_ExamManagementEventN.moveNext()) {state = 41; return false; }
				var20_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var19_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_41() throws Exception {
				state = 0;				
				if( var19_ExamManagementEventN != null ) { var19_ExamManagementEventN.close(); var19_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_42() throws Exception {
				state = 44;				
				if (!var20_ExamSchedulingReques.moveNext()) {state = 43; return false; }
				var21_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var20_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_43() throws Exception {
				state = 40;				
				if( var20_ExamSchedulingReques != null ) { var20_ExamSchedulingReques.close(); var20_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_44() throws Exception {
				state = 46;				
				if (!var21_PostDischargeClaimIn.moveNext()) {state = 45; return false; }
				var22_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var21_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_45() throws Exception {
				state = 42;				
				if( var21_PostDischargeClaimIn != null ) { var21_PostDischargeClaimIn.close(); var21_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_46() throws Exception {
				state = 48;				
				if (!var22_VeteranServiceMember.moveNext()) {state = 47; return false; }
				var23_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var22_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_47() throws Exception {
				state = 44;				
				if( var22_VeteranServiceMember != null ) { var22_VeteranServiceMember.close(); var22_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_48() throws Exception {
				state = 50;				
				if (!var23_Address.moveNext()) {state = 49; return false; }
				var24_description = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("description", ""), ((com.altova.mapforce.IMFNode)(var23_Address.current())))).enumerator();
				return false;
			}
			private boolean moveNext_49() throws Exception {
				state = 46;				
				if( var23_Address != null ) { var23_Address.close(); var23_Address = null; }
				return false;
			}
			private boolean moveNext_50() throws Exception {
				state = 50;				
				if (!var24_description.moveNext()) {state = 51; return false; }
				current = com.altova.functions.Core.createElement("XAD-7", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var24_description.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_51() throws Exception {
				state = 48;				
				if( var24_description != null ) { var24_description.close(); var24_description = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_State != null ) { var7_State.close(); var7_State = null; }
					if( var6_Address != null ) { var6_Address.close(); var6_Address = null; }
					if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
					if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
					if( var13_ZipOrPostalCode != null ) { var13_ZipOrPostalCode.close(); var13_ZipOrPostalCode = null; }
					if( var12_Address != null ) { var12_Address.close(); var12_Address = null; }
					if( var11_VeteranServiceMember != null ) { var11_VeteranServiceMember.close(); var11_VeteranServiceMember = null; }
					if( var10_PostDischargeClaimIn != null ) { var10_PostDischargeClaimIn.close(); var10_PostDischargeClaimIn = null; }
					if( var9_ExamSchedulingReques != null ) { var9_ExamSchedulingReques.close(); var9_ExamSchedulingReques = null; }
					if( var8_ExamManagementEventN != null ) { var8_ExamManagementEventN.close(); var8_ExamManagementEventN = null; }
					if( var18_Address != null ) { var18_Address.close(); var18_Address = null; }
					if( var17_VeteranServiceMember != null ) { var17_VeteranServiceMember.close(); var17_VeteranServiceMember = null; }
					if( var16_PostDischargeClaimIn != null ) { var16_PostDischargeClaimIn.close(); var16_PostDischargeClaimIn = null; }
					if( var15_ExamSchedulingReques != null ) { var15_ExamSchedulingReques.close(); var15_ExamSchedulingReques = null; }
					if( var14_ExamManagementEventN != null ) { var14_ExamManagementEventN.close(); var14_ExamManagementEventN = null; }
					if( var24_description != null ) { var24_description.close(); var24_description = null; }
					if( var23_Address != null ) { var23_Address.close(); var23_Address = null; }
					if( var22_VeteranServiceMember != null ) { var22_VeteranServiceMember.close(); var22_VeteranServiceMember = null; }
					if( var21_PostDischargeClaimIn != null ) { var21_PostDischargeClaimIn.close(); var21_PostDischargeClaimIn = null; }
					if( var20_ExamSchedulingReques != null ) { var20_ExamSchedulingReques.close(); var20_ExamSchedulingReques = null; }
					if( var19_ExamManagementEventN != null ) { var19_ExamManagementEventN.close(); var19_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq10_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq10_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq10_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;
			IEnumerator var7_ExamManagementEventN;
			IEnumerator var4_PostDischargeClaimIn;
			IEnumerator var8_ExamSchedulingReques;
			IEnumerator var5_VeteranServiceMember;
			IEnumerator var13_ExamManagementEventN;
			IEnumerator var9_PostDischargeClaimIn;
			IEnumerator var6_Address;
			IEnumerator var14_ExamSchedulingReques;
			IEnumerator var10_VeteranServiceMember;
			IEnumerator var15_PostDischargeClaimIn;
			IEnumerator var11_Address;
			IEnumerator var16_VeteranServiceMember;
			IEnumerator var12_Address2;
			IEnumerator var17_Address;
			IEnumerator var18_Address3;

			public Enumerator(seq10_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 13: if (moveNext_13()) return true; break;
						case 14: if (moveNext_14()) return true; break;
						case 15: if (moveNext_15()) return true; break;
						case 16: if (moveNext_16()) return true; break;
						case 17: if (moveNext_17()) return true; break;
						case 18: if (moveNext_18()) return true; break;
						case 19: if (moveNext_19()) return true; break;
						case 20: if (moveNext_20()) return true; break;
						case 21: if (moveNext_21()) return true; break;
						case 22: if (moveNext_22()) return true; break;
						case 23: if (moveNext_23()) return true; break;
						case 24: if (moveNext_24()) return true; break;
						case 26: if (moveNext_26()) return true; break;
						case 27: if (moveNext_27()) return true; break;
						case 28: if (moveNext_28()) return true; break;
						case 29: if (moveNext_29()) return true; break;
						case 30: if (moveNext_30()) return true; break;
						case 31: if (moveNext_31()) return true; break;
						case 32: if (moveNext_32()) return true; break;
						case 33: if (moveNext_33()) return true; break;
						case 34: if (moveNext_34()) return true; break;
						case 35: if (moveNext_35()) return true; break;
						case 36: if (moveNext_36()) return true; break;
						case 37: if (moveNext_37()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 3; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 13;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				var7_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 5; return false; }
				var4_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_PostDischargeClaimIn.moveNext()) {state = 7; return false; }
				var5_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_VeteranServiceMember.moveNext()) {state = 9; return false; }
				var6_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var5_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_Address.moveNext()) {state = 11; return false; }
				current = com.altova.functions.Core.createElement("SAD-1", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address1", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var6_Address.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_Address != null ) { var6_Address.close(); var6_Address = null; }
				return false;
			}
			private boolean moveNext_13() throws Exception {
				state = 15;				
				if (!var7_ExamManagementEventN.moveNext()) {state = 14; return false; }
				var8_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var7_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_14() throws Exception {
				state = 26;				
				if( var7_ExamManagementEventN != null ) { var7_ExamManagementEventN.close(); var7_ExamManagementEventN = null; }
				var13_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_15() throws Exception {
				state = 17;				
				if (!var8_ExamSchedulingReques.moveNext()) {state = 16; return false; }
				var9_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var8_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_16() throws Exception {
				state = 13;				
				if( var8_ExamSchedulingReques != null ) { var8_ExamSchedulingReques.close(); var8_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_17() throws Exception {
				state = 19;				
				if (!var9_PostDischargeClaimIn.moveNext()) {state = 18; return false; }
				var10_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var9_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_18() throws Exception {
				state = 15;				
				if( var9_PostDischargeClaimIn != null ) { var9_PostDischargeClaimIn.close(); var9_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_19() throws Exception {
				state = 21;				
				if (!var10_VeteranServiceMember.moveNext()) {state = 20; return false; }
				var11_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var10_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_20() throws Exception {
				state = 17;				
				if( var10_VeteranServiceMember != null ) { var10_VeteranServiceMember.close(); var10_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_21() throws Exception {
				state = 23;				
				if (!var11_Address.moveNext()) {state = 22; return false; }
				var12_Address2 = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address2", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var11_Address.current())))).enumerator();
				return false;
			}
			private boolean moveNext_22() throws Exception {
				state = 19;				
				if( var11_Address != null ) { var11_Address.close(); var11_Address = null; }
				return false;
			}
			private boolean moveNext_23() throws Exception {
				state = 23;				
				if (!var12_Address2.moveNext()) {state = 24; return false; }
				current = com.altova.functions.Core.createElement("SAD-2", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var12_Address2.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_24() throws Exception {
				state = 21;				
				if( var12_Address2 != null ) { var12_Address2.close(); var12_Address2 = null; }
				return false;
			}
			private boolean moveNext_26() throws Exception {
				state = 28;				
				if (!var13_ExamManagementEventN.moveNext()) {state = 27; return false; }
				var14_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var13_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_27() throws Exception {
				state = 0;				
				if( var13_ExamManagementEventN != null ) { var13_ExamManagementEventN.close(); var13_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_28() throws Exception {
				state = 30;				
				if (!var14_ExamSchedulingReques.moveNext()) {state = 29; return false; }
				var15_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var14_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_29() throws Exception {
				state = 26;				
				if( var14_ExamSchedulingReques != null ) { var14_ExamSchedulingReques.close(); var14_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_30() throws Exception {
				state = 32;				
				if (!var15_PostDischargeClaimIn.moveNext()) {state = 31; return false; }
				var16_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var15_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_31() throws Exception {
				state = 28;				
				if( var15_PostDischargeClaimIn != null ) { var15_PostDischargeClaimIn.close(); var15_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_32() throws Exception {
				state = 34;				
				if (!var16_VeteranServiceMember.moveNext()) {state = 33; return false; }
				var17_Address = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var16_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_33() throws Exception {
				state = 30;				
				if( var16_VeteranServiceMember != null ) { var16_VeteranServiceMember.close(); var16_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_34() throws Exception {
				state = 36;				
				if (!var17_Address.moveNext()) {state = 35; return false; }
				var18_Address3 = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Address3", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var17_Address.current())))).enumerator();
				return false;
			}
			private boolean moveNext_35() throws Exception {
				state = 32;				
				if( var17_Address != null ) { var17_Address.close(); var17_Address = null; }
				return false;
			}
			private boolean moveNext_36() throws Exception {
				state = 36;				
				if (!var18_Address3.moveNext()) {state = 37; return false; }
				current = com.altova.functions.Core.createElement("SAD-3", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var18_Address3.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_37() throws Exception {
				state = 34;				
				if( var18_Address3 != null ) { var18_Address3.close(); var18_Address3 = null; }
				return false;
			}


			public void close() {
				try {
					if( var6_Address != null ) { var6_Address.close(); var6_Address = null; }
					if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
					if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
					if( var12_Address2 != null ) { var12_Address2.close(); var12_Address2 = null; }
					if( var11_Address != null ) { var11_Address.close(); var11_Address = null; }
					if( var10_VeteranServiceMember != null ) { var10_VeteranServiceMember.close(); var10_VeteranServiceMember = null; }
					if( var9_PostDischargeClaimIn != null ) { var9_PostDischargeClaimIn.close(); var9_PostDischargeClaimIn = null; }
					if( var8_ExamSchedulingReques != null ) { var8_ExamSchedulingReques.close(); var8_ExamSchedulingReques = null; }
					if( var7_ExamManagementEventN != null ) { var7_ExamManagementEventN.close(); var7_ExamManagementEventN = null; }
					if( var18_Address3 != null ) { var18_Address3.close(); var18_Address3 = null; }
					if( var17_Address != null ) { var17_Address.close(); var17_Address = null; }
					if( var16_VeteranServiceMember != null ) { var16_VeteranServiceMember.close(); var16_VeteranServiceMember = null; }
					if( var15_PostDischargeClaimIn != null ) { var15_PostDischargeClaimIn.close(); var15_PostDischargeClaimIn = null; }
					if( var14_ExamSchedulingReques != null ) { var14_ExamSchedulingReques.close(); var14_ExamSchedulingReques = null; }
					if( var13_ExamManagementEventN != null ) { var13_ExamManagementEventN.close(); var13_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq11_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq11_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq11_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;
			IEnumerator var4_PostDischargeClaimIn;
			IEnumerator var5_VeteranServiceMember;
			IEnumerator var6_Phone;

			public Enumerator(seq11_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 3; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 5; return false; }
				var4_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_PostDischargeClaimIn.moveNext()) {state = 7; return false; }
				var5_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_VeteranServiceMember.moveNext()) {state = 9; return false; }
				var6_Phone = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Phone", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var5_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 10;				
				if (!var6_Phone.moveNext()) {state = 11; return false; }
				current = com.altova.functions.Core.createElement("XTN-1", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("primaryPhone", ""), ((com.altova.mapforce.IMFNode)(var6_Phone.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_Phone != null ) { var6_Phone.close(); var6_Phone = null; }
				return false;
			}


			public void close() {
				try {
					if( var6_Phone != null ) { var6_Phone.close(); var6_Phone = null; }
					if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
					if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq12_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq12_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq12_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;
			IEnumerator var4_PostDischargeClaimIn;
			IEnumerator var5_VeteranServiceMember;
			IEnumerator var6_Phone;
			IEnumerator var7_alternatePhone;

			public Enumerator(seq12_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
						case 6: if (moveNext_6()) return true; break;
						case 7: if (moveNext_7()) return true; break;
						case 8: if (moveNext_8()) return true; break;
						case 9: if (moveNext_9()) return true; break;
						case 10: if (moveNext_10()) return true; break;
						case 11: if (moveNext_11()) return true; break;
						case 12: if (moveNext_12()) return true; break;
						case 13: if (moveNext_13()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 3; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 6;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 5; return false; }
				var4_PostDischargeClaimIn = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("PostDischargeClaimInformation", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))).enumerator();
				return false;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}
			private boolean moveNext_6() throws Exception {
				state = 8;				
				if (!var4_PostDischargeClaimIn.moveNext()) {state = 7; return false; }
				var5_VeteranServiceMember = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("VeteranServiceMemberInfo", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var4_PostDischargeClaimIn.current())))).enumerator();
				return false;
			}
			private boolean moveNext_7() throws Exception {
				state = 4;				
				if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
				return false;
			}
			private boolean moveNext_8() throws Exception {
				state = 10;				
				if (!var5_VeteranServiceMember.moveNext()) {state = 9; return false; }
				var6_Phone = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("Phone", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var5_VeteranServiceMember.current())))).enumerator();
				return false;
			}
			private boolean moveNext_9() throws Exception {
				state = 6;				
				if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
				return false;
			}
			private boolean moveNext_10() throws Exception {
				state = 12;				
				if (!var6_Phone.moveNext()) {state = 11; return false; }
				var7_alternatePhone = (com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("alternatePhone", ""), ((com.altova.mapforce.IMFNode)(var6_Phone.current())))).enumerator();
				return false;
			}
			private boolean moveNext_11() throws Exception {
				state = 8;				
				if( var6_Phone != null ) { var6_Phone.close(); var6_Phone = null; }
				return false;
			}
			private boolean moveNext_12() throws Exception {
				state = 12;				
				if (!var7_alternatePhone.moveNext()) {state = 13; return false; }
				current = com.altova.functions.Core.createElement("XTN-1", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString(((com.altova.mapforce.IMFNode)(var7_alternatePhone.current())))));
				pos++;
				return true;
			}
			private boolean moveNext_13() throws Exception {
				state = 10;				
				if( var7_alternatePhone != null ) { var7_alternatePhone.close(); var7_alternatePhone = null; }
				return false;
			}


			public void close() {
				try {
					if( var7_alternatePhone != null ) { var7_alternatePhone.close(); var7_alternatePhone = null; }
					if( var6_Phone != null ) { var6_Phone.close(); var6_Phone = null; }
					if( var5_VeteranServiceMember != null ) { var5_VeteranServiceMember.close(); var5_VeteranServiceMember = null; }
					if( var4_PostDischargeClaimIn != null ) { var4_PostDischargeClaimIn.close(); var4_PostDischargeClaimIn = null; }
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class seq13_seq_ implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_box;

		public seq13_seq_(com.altova.mapforce.IEnumerable var1_box)	{
			this.var1_box = var1_box;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq13_seq_ closure;

			public Enumerator(seq13_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("PV1-1", closure.var1_box);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 3;				
				current = com.altova.functions.Core.createElement("PV1-2", com.altova.functions.Core.box("O"));
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement("PV1-18", com.altova.functions.Core.box("C&P"));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq14_seq_ implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;
		com.altova.mapforce.IEnumerable var2_box;

		public seq14_seq_(com.altova.mapforce.IEnumerable var1_ExamManagementEventN, com.altova.mapforce.IEnumerable var2_box)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
			this.var2_box = var2_box;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq14_seq_ closure;

			public Enumerator(seq14_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("ORC", com.altova.functions.Core.box(com.altova.functions.Core.createElement("ORC-1", com.altova.functions.Core.box("NW"))));
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement("ORM_O01.ORDER_DETAIL", com.altova.functions.Core.box(com.altova.functions.Core.createElement("ORM_O01.", com.altova.functions.Core.box(com.altova.functions.Core.createElement("OBR", (new seq15_seq_(closure.var1_ExamManagementEventN, closure.var2_box)))))));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq15_seq_ implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;
		com.altova.mapforce.IEnumerable var2_box;

		public seq15_seq_(com.altova.mapforce.IEnumerable var1_ExamManagementEventN, com.altova.mapforce.IEnumerable var2_box)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
			this.var2_box = var2_box;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq15_seq_ closure;

			public Enumerator(seq15_seq_ closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				current = com.altova.functions.Core.createElement("OBR-1", closure.var2_box);
				pos++;
				return true;
			}
			private boolean moveNext_2() throws Exception {
				state = 0;				
				current = com.altova.functions.Core.createElement("OBR-2", (new seq16_join(closure.var1_ExamManagementEventN)));
				pos++;
				return true;
			}


			public void close() {
			}
		}
	}
	static class seq16_join implements IEnumerable {
		com.altova.mapforce.IEnumerable var1_ExamManagementEventN;

		public seq16_join(com.altova.mapforce.IEnumerable var1_ExamManagementEventN)	{
			this.var1_ExamManagementEventN = var1_ExamManagementEventN;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			seq16_join closure;
			IEnumerator var2_ExamManagementEventN;
			IEnumerator var3_ExamSchedulingReques;

			public Enumerator(seq16_join closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
						case 4: if (moveNext_4()) return true; break;
						case 5: if (moveNext_5()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_ExamManagementEventN = (closure.var1_ExamManagementEventN).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 4;				
				if (!var2_ExamManagementEventN.moveNext()) {state = 3; return false; }
				var3_ExamSchedulingReques = (com.altova.functions.Core.filterElements(com.altova.functions.Core.createQName("ExamSchedulingRequestCreatedEvent", "http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/3.1"), ((com.altova.mapforce.IMFNode)(var2_ExamManagementEventN.current())))).enumerator();
				return false;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				return false;
			}
			private boolean moveNext_4() throws Exception {
				state = 4;				
				if (!var3_ExamSchedulingReques.moveNext()) {state = 5; return false; }
				current = com.altova.functions.Core.createElement("EI-1", com.altova.functions.Core.box(com.altova.CoreTypes.nodeToString((com.altova.mapforce.IMFNode)com.altova.functions.Core.first(com.altova.functions.Core.filterAttributes(com.altova.functions.Core.createQName("examSchedulingRequestUuid", ""), ((com.altova.mapforce.IMFNode)(var3_ExamSchedulingReques.current())))))));
				pos++;
				return true;
			}
			private boolean moveNext_5() throws Exception {
				state = 2;				
				if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
				return false;
			}


			public void close() {
				try {
					if( var3_ExamSchedulingReques != null ) { var3_ExamSchedulingReques.close(); var3_ExamSchedulingReques = null; }
					if( var2_ExamManagementEventN != null ) { var2_ExamManagementEventN.close(); var2_ExamManagementEventN = null; }
				} catch (Exception e) {
				}
			}
		}
	}
	static class Outer implements IEnumerable {
		com.altova.mapforce.IMFNode var1_ExamManagement_3_1_Instance;

		public Outer(com.altova.mapforce.IMFNode var1_ExamManagement_3_1_Instance)	{
			this.var1_ExamManagement_3_1_Instance = var1_ExamManagement_3_1_Instance;
		}

		public IEnumerator enumerator() {return new Enumerator(this);}

		public static class Enumerator implements IEnumerator {
			int pos = 0;
			int state = 1;
			Object current;
			Outer closure;
			IEnumerator var2_box;

			public Enumerator(Outer closure) {
				this.closure = closure;
			}

			public Object current() {return current;}

			public int position() {return pos;}

			public boolean moveNext() throws Exception {
				while (state != 0) {
					switch (state) {
						case 1: if (moveNext_1()) return true; break;
						case 2: if (moveNext_2()) return true; break;
						case 3: if (moveNext_3()) return true; break;
					}
				}
				return false;
			}

			private boolean moveNext_1() throws Exception {
				state = 2;				
				var2_box = ((new main(closure.var1_ExamManagement_3_1_Instance))).enumerator();
				return false;
			}
			private boolean moveNext_2() throws Exception {
				state = 2;				
				if (!var2_box.moveNext()) {state = 3; return false; }
				current = var2_box.current();
				pos++;
				return true;
			}
			private boolean moveNext_3() throws Exception {
				state = 0;				
				if( var2_box != null ) { var2_box.close(); var2_box = null; }
				return false;
			}


			public void close() {
				try {
					if( var2_box != null ) { var2_box.close(); var2_box = null; }
				} catch (Exception e) {
				}
			}
		}
	}


	// instances
	protected org.w3c.dom.Node varExamManagement_3_12Instance;

	public void run(String ExamManagement_3_12SourceFilename, String ORM_O01TargetFilename) throws Exception {
		try(
			// open source streams
			com.altova.io.FileInput ExamManagement_3_12Source = new com.altova.io.FileInput(ExamManagement_3_12SourceFilename);
		// open target stream
			com.altova.io.FileOutput ORM_O01Target = new com.altova.io.FileOutput(ORM_O01TargetFilename);

		) {
			// run
			run(ExamManagement_3_12Source, ORM_O01Target);

		}
	}


	// main entry point

	public void run(com.altova.io.Input ExamManagement_3_12Source, com.altova.io.Output ORM_O01Target) throws Exception {
		// Open the source(s)
		writeTrace("Loading " + ExamManagement_3_12Source + "...\n");
		org.w3c.dom.Document doc_ExamManagement_3_12 = XmlTreeOperations.loadDocument(ExamManagement_3_12Source);
		varExamManagement_3_12Instance = doc_ExamManagement_3_12;
		if (runDoesCloseAll)
			ExamManagement_3_12Source.close();

		// Create the target
		com.bracari.services.va.ehrmexammanagementservices.mapforce.Envelope.EnvelopeDocument ORM_O01TargetDoc = new com.bracari.services.va.ehrmexammanagementservices.mapforce.Envelope.EnvelopeDocument();
		com.altova.text.ITextNode ORM_O01TargetObject = ORM_O01TargetDoc.getGenerator();

		// Execute mapping

		main mapping = new main(new com.altova.xml.DOMDocumentAsMFNodeAdapter(varExamManagement_3_12Instance, ExamManagement_3_12Source.getFilename()));

		com.altova.text.MFTextWriter.write(mapping, ORM_O01TargetObject);
		// Close the target
		ORM_O01TargetDoc.setEncoding( "ISO-8859-1", false, false );
		ORM_O01TargetDoc.save(ORM_O01Target);


		if (runDoesCloseAll) {
			ExamManagement_3_12Source.close();
			ORM_O01Target.close();
		}
	}



}
